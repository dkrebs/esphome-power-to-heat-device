esphome:
  name: heizstab
  friendly_name: heizstab

globals:
   - id: is_heat
     type: bool
     restore_value: no
     initial_value: 'false'
   - id: last_update
     type: int
     restore_value: no
     initial_value: '-1'

esp8266:
  board: esp8285

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

api:

logger:

ota:

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Berlin
    on_time:
      - seconds: /4
        then:
          - lambda: |-
              int delta = id(sntp_time).now().timestamp - id(last_update);
              if (delta > 10) {
                ESP_LOGD("on_time", "delta %d > 5: turning OFF", delta);

                id(first).turn_off();
                id(second).turn_off();
                id(third).turn_off();
              }

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode:
        input: true
        pullup: true
      inverted: true
    name: "Sonoff 4CH Button 1"
  - platform: gpio
    pin:
      number: GPIO9
      mode:
        input: true
        pullup: true
      inverted: true
    name: "Sonoff 4CH Button 2"
  - platform: gpio
    pin:
      number: GPIO10
      mode:
        input: true
        pullup: true
      inverted: true
    name: "Sonoff 4CH Button 3"
  - platform: gpio
    pin:
      number: GPIO14
      mode:
        input: true
        pullup: true
      inverted: true
    name: "Sonoff 4CH Button 4"
  - platform: status
    name: "Sonoff 4CH Status"

switch:
  - platform: gpio
    id: first
    name: first
    pin: GPIO12
  - platform: gpio
    id: second
    name: second
    pin: GPIO5
  - platform: gpio
    id: third
    name: third
    pin: GPIO4
#  - platform: gpio
#    name: "Sonoff 4CH Relay 4"
#    pin: GPIO15

sensor:
  - platform: homeassistant
    id: hvac_controller_buffer1_top
    entity_id: sensor.hvac_controller_buffer1_top
  - platform: homeassistant
    id: total_system_power
    entity_id: sensor.total_system_power
    on_value:
      then:
        - lambda: |-
            int totalSystemPower = static_cast<int>(x);
            id(last_update) = id(sntp_time).now().timestamp;

            int switchPower = 0;
            if (id(first).state) {
              switchPower += 1000;
            }
            if (id(second).state) {
              switchPower += 1000;
            }
            if (id(third).state) {
              switchPower += 1000;
            }

            int realPower = totalSystemPower - switchPower;

            ESP_LOGD("buffer_top_on_value", "last_update: %d", id(last_update));
            if (!id(is_heat)) {
              realPower = 999999;
              ESP_LOGD("buffer_top_on_value", "heating is turned OFF");

            }
            ESP_LOGD("buffer_top_on_value", "%d = %d - %d", realPower, totalSystemPower, switchPower);

            if (realPower < -1000) {
              id(first).turn_on();
            } else {
              id(first).turn_off();
            }

            if (realPower < -2000) {
              id(second).turn_on();
            } else {
              id(second).turn_off();
            }

            if (realPower < -3000) {
              id(third).turn_on();
            } else {
              id(third).turn_off();
            }

climate:
  - platform: thermostat
    name: "Warmwasser"
    sensor: hvac_controller_buffer1_top
    preset:
      - name: warm
        default_target_temperature_low: 70
    min_idle_time: 0s
    min_heating_off_time: 0s
    min_heating_run_time: 0s
    visual:
      min_temperature: 30
      max_temperature: 85
      temperature_step: 5
    default_preset: warm
    heat_action:
      - lambda: |-
          id(is_heat) = true;
    idle_action:
      - lambda: |-
          id(is_heat) = false;
